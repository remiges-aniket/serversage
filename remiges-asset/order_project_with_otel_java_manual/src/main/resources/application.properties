# Application Configuration
spring.application.name=serversage

# Database Configuration with Environment Variables
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/serversage}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration with SQL Logging
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Server Configuration
server.port=8081

# OpenTelemetry Configuration
otel.service.name=${OTEL_SERVICE_NAME:serversage}
otel.service.version=${OTEL_SERVICE_VERSION:1.0.0}
otel.deployment.environment=${OTEL_DEPLOYMENT_ENVIRONMENT:development}
otel.exporter.otlp.endpoint=${OTEL_EXPORTER_OTLP_ENDPOINT:http://localhost:4317}
otel.exporter.otlp.protocol=${OTEL_EXPORTER_OTLP_PROTOCOL:grpc}

# OpenTelemetry SDK Configuration
otel.sdk.disabled=false
otel.traces.exporter=${OTEL_TRACES_EXPORTER:otlp}
otel.metrics.exporter=${OTEL_METRICS_EXPORTER:otlp}
otel.logs.exporter=${OTEL_LOGS_EXPORTER:otlp}

# OpenTelemetry Instrumentation - Enhanced Database Tracing
otel.instrumentation.spring-webmvc.enabled=true
otel.instrumentation.spring-data.enabled=true
otel.instrumentation.jdbc.enabled=true
otel.instrumentation.jdbc.statement-sanitizer.enabled=false
otel.instrumentation.logback-appender.enabled=true
otel.instrumentation.hibernate.enabled=true

# Database Connection Pool Tracing
otel.instrumentation.hikaricp.enabled=true

# OpenTelemetry Sampling and Exemplars
otel.traces.sampler=${OTEL_TRACES_SAMPLER:always_on}
otel.metrics.exemplar.filter=${OTEL_METRICS_EXEMPLAR_FILTER:trace_based}

# Enhanced Database Tracing Configuration
otel.instrumentation.jdbc.statement-sanitizer.enabled=false
otel.instrumentation.jdbc.datasource-class-names=org.postgresql.ds.PGSimpleDataSource,org.postgresql.ds.PGConnectionPoolDataSource,org.postgresql.ds.PGPoolingDataSource
otel.instrumentation.jdbc.include-connection-attributes=true

# Micrometer and Prometheus Configuration for Exemplars
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.export.prometheus.exemplars.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.slo.http.server.requests=50ms,100ms,200ms,300ms,400ms,500ms,1s,2s

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true

# Cache Configuration
spring.cache.type=simple
spring.cache.cache-names=users,products,orders

# Enhanced Logging Configuration with Database Query Logging
logging.level.tech.remiges.serversage=INFO
logging.level.io.opentelemetry=WARN
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.jdbc.core=DEBUG
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.hibernate.engine.jdbc.spi.SqlExceptionHelper=DEBUG
logging.level.com.zaxxer.hikari=DEBUG
logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
logging.level.com.zaxxer.hikari.HikariDataSource=DEBUG

logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n
logging.file.name=app.log

# OpenTelemetry Logging Bridge
otel.logs.exporter=otlp
otel.instrumentation.logback-appender.enabled=true
otel.instrumentation.logback-mdc.add-baggage=true

# Thread Pool Configuration
spring.task.execution.pool.core-size=10
spring.task.execution.pool.max-size=50
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=serversage-

# Validation Configuration
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# Additional OpenTelemetry Resource Attributes
otel.resource.attributes=service.name=${otel.service.name},service.version=${otel.service.version},deployment.environment=${otel.deployment.environment}
