---
# ConfigMap for Elasticsearch configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-config
  namespace: elastic
  labels:
    app: elasticsearch
data:
  elasticsearch.yaml: |-
    # Note: Bitnami images prioritize environment variables.
    # While this ConfigMap sets basic settings, the env vars in StatefulSets
    # will ultimately determine the effective configuration.
    cluster.name: es-cluster
    network.host: 0.0.0.0

    # Discovery and cluster formation - should align with env vars
    discovery.seed_hosts:
      - "elasticsearch-master-0.elasticsearch-master.elastic.svc.cluster.local:9300"
      - "elasticsearch-master-1.elasticsearch-master.elastic.svc.cluster.local:9300"
      - "elasticsearch-master-2.elasticsearch-master.elastic.svc.cluster.local:9300"

    cluster.initial_master_nodes:
      - "elasticsearch-master-0"
      - "elasticsearch-master-1"
      - "elasticsearch-master-2"

    # Set bootstrap.memory_lock to true
    bootstrap.memory_lock: true # This is also enabled via ELASTICSEARCH_HEAP_SIZE implicitly for Bitnami, and explicitly below

    # Lower ping timeouts to detect node failures faster
    transport.ping_schedule: 5s

    # Enable automatic recovery and fault tolerance
    gateway.recover_after_nodes: 2
    gateway.expected_nodes: 3
    gateway.recover_after_time: 1m

    # Increase cluster stability
    cluster.routing.allocation.node_initial_primaries_recoveries: 4
    cluster.routing.allocation.node_concurrent_recoveries: 2

    # X-Pack security enabled via env var ELASTICSEARCH_SECURITY_ENABLED
    xpack.security.enabled: false
    xpack.monitoring.collection.enabled: true
  jvm.options: |-
    -Xms1g
    -Xmx1g
    -XX:+UseG1GC # CHANGED: Replaced UseConcMarkSweepGC with UseG1GC
    -XX:+AlwaysPreTouch
    -server
    -Djava.awt.headless=true
    -Dfile.encoding=UTF-8
    -Djna.nosys=true
    -XX:-OmitStackTraceInFastThrow
    -XX:+ShowCodeDetailsInExceptionMessages
    -Dio.netty.noUnsafe=true
    -Dio.netty.noKeySetOptimization=true
    -Dio.netty.recycler.maxCapacityPerThread=0
    -Dlog4j.shutdownHookEnabled=false
    -Dlog4j2.disable.jmx=true
    -Djava.io.tmpdir=${ES_TMPDIR}
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:HeapDumpPath=data
    -XX:ErrorFile=logs/hs_err_pid%p.log
    -Xlog:gc*,gc+age=trace,safepoint:file=logs/gc.log:utctime,pid,tags:filecount=32,filesize=64m

---
# Headless Service for Elasticsearch cluster (all nodes)
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: elastic
  labels:
    app: elasticsearch
spec:
  clusterIP: None
  selector:
    app: elasticsearch
  ports:
  - port: 9200
    name: http
    protocol: TCP
  - port: 9300
    name: transport
    protocol: TCP

---
# Service for client nodes (external access)
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-client
  namespace: elastic
  labels:
    app: elasticsearch
    role: client
spec:
  type: NodePort
  selector:
    app: elasticsearch
    role: client
  ports:
  - port: 9200
    name: http
    targetPort: 9200
    nodePort: 30015
  - port: 9300
    name: transport
    targetPort: 9300

---
# Service for master nodes (headless for StatefulSet)
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-master
  namespace: elastic
  labels:
    app: elasticsearch
    role: master
spec:
  clusterIP: None
  selector:
    app: elasticsearch
    role: master
  ports:
  - port: 9300
    name: transport

---
# Service for data nodes (headless for StatefulSet)
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-data
  namespace: elastic
  labels:
    app: elasticsearch
    role: data
spec:
  clusterIP: None
  selector:
    app: elasticsearch
    role: data
  ports:
  - port: 9300
    name: transport

---
# Storage class for Elasticsearch
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  namespace: elastic
  name: elasticsearch-storage
provisioner: kubernetes.io/no-provisioner # Manual provisioning via hostPath
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain

---
# PersistentVolumes for Master Nodes (ensure these match your actual host paths)
apiVersion: v1
kind: PersistentVolume
metadata:
  name: elasticsearch-master-pv-0
  namespace: elastic # PVs are not namespaced, but added for context here
  labels:
    app: elasticsearch
    role: master
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: elasticsearch-storage
  hostPath:
    path: /data/elasticsearch/master-0 # Ensure this path exists on your node
    type: DirectoryOrCreate

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: elasticsearch-master-pv-1
  namespace: elastic
  labels:
    app: elasticsearch
    role: master
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: elasticsearch-storage
  hostPath:
    path: /data/elasticsearch/master-1 # Ensure this path exists on your node
    type: DirectoryOrCreate

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: elasticsearch-master-pv-2
  namespace: elastic
  labels:
    app: elasticsearch
    role: master
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: elasticsearch-storage
  hostPath:
    path: /data/elasticsearch/master-2 # Ensure this path exists on your node
    type: DirectoryOrCreate

---
# PersistentVolumes for Data Nodes (ensure these match your actual host paths)
apiVersion: v1
kind: PersistentVolume
metadata:
  name: elasticsearch-data-pv-0
  namespace: elastic
  labels:
    app: elasticsearch
    role: data
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: elasticsearch-storage
  hostPath:
    path: /data/elasticsearch/data-0 # Ensure this path exists on your node
    type: DirectoryOrCreate

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: elasticsearch-data-pv-1
  namespace: elastic
  labels:
    app: elasticsearch
    role: data
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: elasticsearch-storage
  hostPath:
    path: /data/elasticsearch/data-1 # Ensure this path exists on your node
    type: DirectoryOrCreate

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: elasticsearch-data-pv-2
  namespace: elastic
  labels:
    app: elasticsearch
    role: data
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: elasticsearch-storage
  hostPath:
    path: /data/elasticsearch/data-2 # Ensure this path exists on your node
    type: DirectoryOrCreate

---
# StatefulSet for Master Nodes
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-master
  namespace: elastic
  labels:
    app: elasticsearch
    role: master
spec:
  serviceName: elasticsearch-master
  replicas: 3
  selector:
    matchLabels:
      app: elasticsearch
      role: master
  template:
    metadata:
      labels:
        app: elasticsearch
        role: master
    spec:
      # Pod Anti-Affinity to spread master pods across different nodes for high availability
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - elasticsearch
                  - key: role
                    operator: In
                    values:
                      - master
              topologyKey: "kubernetes.io/hostname"
      # If you want to force specific nodes, use nodeSelector or preferredDuringSchedulingIgnoredDuringExecution with hostnames.
      # For example, to use my-cluster-worker3 for elasticsearch-master-0:
      # nodeSelector:
      #   kubernetes.io/hostname: my-cluster-worker3

      initContainers:
      - name: init-sysctl
        image: busybox:1.27.2
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        securityContext:
          privileged: true
      - name: fix-permissions
        image: busybox:1.27.2
        command: ["sh", "-c", "chown -R 1001:1001 /bitnami/elasticsearch/data"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: elasticsearch-master-data
          mountPath: /bitnami/elasticsearch/data
      containers:
      - name: elasticsearch-master
        image: bitnami/elasticsearch:8.11.1
        resources:
          limits:
            cpu: 800m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: transport
        env:
        # --- START BITNAMI SPECIFIC ENVIRONMENT VARIABLES FOR MASTER NODES ---
        - name: ELASTICSEARCH_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ELASTICSEARCH_CLUSTER_NAME
          value: "es-cluster"
        - name: ELASTICSEARCH_CLUSTER_HOSTS # CORRECTED FQDN for discovery
          value: "elasticsearch-master-0.elasticsearch-master.elastic.svc.cluster.local,elasticsearch-master-1.elasticsearch-master.elastic.svc.cluster.local,elasticsearch-master-2.elasticsearch-master.elastic.svc.cluster.local"
        - name: ELASTICSEARCH_CLUSTER_MASTER_HOSTS # Initial master nodes for bootstrapping
          value: "elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2"
        - name: ELASTICSEARCH_NODE_ROLES
          value: "master"
        - name: ELASTICSEARCH_IS_DEDICATED_NODE
          value: "yes"
        - name: ELASTICSEARCH_HEAP_SIZE
          value: "1g"
        - name: ELASTICSEARCH_BIND_ADDRESS
          value: "0.0.0.0"
        - name: ELASTICSEARCH_SECURITY_ENABLED
          value: "no"
        - name: ELASTICSEARCH_SKIP_CONFIG_VALIDATION
          value: "yes"
        # --- END BITNAMI SPECIFIC ENVIRONMENT VARIABLES ---
        - name: ES_TMPDIR
          value: /tmp
        volumeMounts:
        - name: elasticsearch-master-data
          mountPath: /bitnami/elasticsearch/data
        - name: config
          mountPath: /opt/bitnami/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yaml
        - name: config
          mountPath: /opt/bitnami/elasticsearch/config/jvm.options
          subPath: jvm.options
        readinessProbe:
          exec:
            command:
            - bash
            - -c
            - |
              #!/usr/bin/env bash
              set -e
              curl --silent --fail localhost:9200/_cluster/health?wait_for_status=yellow
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
      volumes:
      - name: config
        configMap:
          name: elasticsearch-config
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-master-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: elasticsearch-storage
      resources:
        requests:
          storage: 1Gi

---
# StatefulSet for Data Nodes
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-data
  namespace: elastic
  labels:
    app: elasticsearch
    role: data
spec:
  serviceName: elasticsearch-data
  replicas: 3
  selector:
    matchLabels:
      app: elasticsearch
      role: data
  template:
    metadata:
      labels:
        app: elasticsearch
        role: data
    spec:
      # Pod Anti-Affinity to spread data pods across different nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - elasticsearch
                    - key: role
                      operator: In
                      values:
                        - data
                topologyKey: "kubernetes.io/hostname"

      initContainers:
      - name: init-sysctl
        image: busybox:1.27.2
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        securityContext:
          privileged: true
      - name: fix-permissions
        image: busybox:1.27.2
        command: ["sh", "-c", "chown -R 1001:1001 /bitnami/elasticsearch/data"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: elasticsearch-data-data
          mountPath: /bitnami/elasticsearch/data
      containers:
      - name: elasticsearch-data
        image: bitnami/elasticsearch:8.11.1
        resources:
          limits:
            cpu: 800m
            memory: 3Gi
          requests:
            cpu: 500m
            memory: 2Gi
        ports:
        - containerPort: 9300
          name: transport
        env:
        # --- START BITNAMI SPECIFIC ENVIRONMENT VARIABLES FOR DATA NODES ---
        - name: ELASTICSEARCH_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ELASTICSEARCH_CLUSTER_NAME
          value: "es-cluster"
        - name: ELASTICSEARCH_CLUSTER_HOSTS # CORRECTED FQDN for discovery
          value: "elasticsearch-master-0.elasticsearch-master.elastic.svc.cluster.local,elasticsearch-master-1.elasticsearch-master.elastic.svc.cluster.local,elasticsearch-master-2.elasticsearch-master.elastic.svc.cluster.local"
        - name: ELASTICSEARCH_CLUSTER_MASTER_HOSTS
          value: "elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2"
        - name: ELASTICSEARCH_NODE_ROLES
          value: "data,ingest"
        - name: ELASTICSEARCH_IS_DEDICATED_NODE
          value: "yes"
        - name: ELASTICSEARCH_HEAP_SIZE
          value: "2g"
        - name: ELASTICSEARCH_BIND_ADDRESS
          value: "0.0.0.0"
        - name: ELASTICSEARCH_SECURITY_ENABLED
          value: "no"
        - name: ELASTICSEARCH_SKIP_CONFIG_VALIDATION
          value: "yes"
        # --- END BITNAMI SPECIFIC ENVIRONMENT VARIABLES ---
        - name: ES_TMPDIR
          value: /tmp
        volumeMounts:
        - name: elasticsearch-data-data
          mountPath: /bitnami/elasticsearch/data
        - name: config
          mountPath: /opt/bitnami/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yaml
        - name: config
          mountPath: /opt/bitnami/elasticsearch/config/jvm.options
          subPath: jvm.options
        readinessProbe:
          exec:
            command:
            - bash
            - -c
            - |
              #!/usr/bin/env bash
              set -e
              curl --silent --fail localhost:9200/_cluster/health?wait_for_status=yellow
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
      volumes:
      - name: config
        configMap:
          name: elasticsearch-config
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-data-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: elasticsearch-storage
      resources:
        requests:
          storage: 2Gi

---
# Deployment for Client Nodes
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch-client
  namespace: elastic
  labels:
    app: elasticsearch
    role: client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
      role: client
  template:
    metadata:
      labels:
        app: elasticsearch
        role: client
    spec:
      # Pod Anti-Affinity for client nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - elasticsearch
                    - key: role
                      operator: In
                      values:
                        - client
                topologyKey: "kubernetes.io/hostname"

      initContainers:
      - name: init-sysctl
        image: busybox:1.27.2
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch-client
        image: bitnami/elasticsearch:8.11.1
        resources:
          limits:
            cpu: 800m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: transport
        env:
        # --- START BITNAMI SPECIFIC ENVIRONMENT VARIABLES FOR CLIENT NODES ---
        - name: ELASTICSEARCH_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ELASTICSEARCH_CLUSTER_NAME
          value: "es-cluster"
        - name: ELASTICSEARCH_CLUSTER_HOSTS # CORRECTED FQDN for discovery
          value: "elasticsearch-master-0.elasticsearch-master.elastic.svc.cluster.local,elasticsearch-master-1.elasticsearch-master.elastic.svc.cluster.local,elasticsearch-master-2.elasticsearch-master.elastic.svc.cluster.local"
        - name: ELASTICSEARCH_CLUSTER_MASTER_HOSTS
          value: "elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2"
        - name: ELASTICSEARCH_NODE_ROLES
          value: "ingest,remote_cluster_client"
        - name: ELASTICSEARCH_IS_DEDICATED_NODE
          value: "no"
        - name: ELASTICSEARCH_HEAP_SIZE
          value: "1g"
        - name: ELASTICSEARCH_BIND_ADDRESS
          value: "0.0.0.0"
        - name: ELASTICSEARCH_SECURITY_ENABLED
          value: "no"
        - name: ELASTICSEARCH_SKIP_CONFIG_VALIDATION
          value: "yes"
        # --- END BITNAMI SPECIFIC ENVIRONMENT VARIABLES ---
        - name: ES_TMPDIR
          value: /tmp
        volumeMounts:
        # Client nodes typically don't store data, so no /bitnami/elasticsearch/data mount
        - name: config
          mountPath: /opt/bitnami/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yaml
        - name: config
          mountPath: /opt/bitnami/elasticsearch/config/jvm.options
          subPath: jvm.options
        readinessProbe:
          httpGet:
            path: /_cluster/health
            port: 9200
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
      volumes:
      - name: config
        configMap:
          name: elasticsearch-config